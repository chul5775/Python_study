'''--------------------- 파이썬 시작 ---------------------'''

'''
여러줄 주석 (작은따옴표)
'''

# 한줄주석

from _ast import keyword

'''
1) 파이썬은 무조건 객체변수다.
   (주소를 가지고있다.)
2) 파이썬에서 띄어쓰기는 의미가 있기때문에
    띄어쓰기를 맘대로 해서는 아니된다.
3) 
'''

'''======================================================'''



'''--------------------- 1) 파이썬에서의 배열 ---------------------'''

var1 = '안녕'
print(var1)

var1 = 5; print(var1);
var1 = "변수형은 객체에 의해 결정"
print(var1)

a = 10
b = 2.5
c = a + b
print("a는",a, "b는", b, "c는", c)
print(id(a), id(b), id(c)) #주소 확인
print(a is b, a==b) # is: 주소비교 , == 값비교

A = 1
a = 2
print(A,a)

'''======================================================'''



'''--------------------- 2) 외부모듈 받아오기  ---------------------'''

import keyword
print('키워드: ', keyword.kwlist)

print("-----------------------")

'''======================================================'''



'''--------------------- 3) 진수 확인하기. ---------------------'''

print(10, oct(10), hex(10), bin(10))
print(10, 0o12, 0xa, 0b1010)

'''======================================================'''



'''--------------------- 4) 자료형  ---------------------'''

print('type(자료형) 확인')
print(3, type(3))
print(3.14, type(3.14))
print(3 + 4j, type(3 + 4j))

print(True, type(True))

print('k', type('k'))  # Tuple (소괄호 안에쓰면)
print((1,), type((1,))) # Tuple (대괄호 안에쓰면)
print([1], type([1])) # list (중괄호 안에 쓰면)
print({1}, type({1}))# Set
print({'key':1}, type({'key': 1})) # 딕셔너리(dic)

print(isinstance(1, int)) # type확인 함수
print("-----------------------")

'''======================================================'''



'''--------------------- 5) 출력 서식 (이 형식이 몹시 중요하다.) ---------------------'''

# 여기서 집중해서 볼것 = %

print(format(1.5678, '10.3f')) 
print('나는 나이가 %d 이다.'%23)
print('나는 나이가 %s 이다.'%'스물셋')
print('나는 키가 %f이고, 에너지가 %d%%.'%(177.7, 100))

print('나는 나이가 %d 이고 이름은 %s이다.'%(23, '홍길동'))
print('나는 나이가 %s 이고 이름은 %s이다.'%(23, '홍길동'))

print('이름은 {0}, 나이는 {1}'.format('한국인', 33))
print('이름은 {}, 나이는 {}'.format('신선해', 33)) # 이와같이 중괄호 안에 아무것도 채워주지 않으면, format을 그냥 읽어드림.
print('이름은 {1}, 나이는 {0}'.format(34, '강나루'))

'''''''''''''''''''''''''''''''''''''''''''''
Tip) 파이썬은 자동으로 라인스킾을 하는데
라인스킾을 하고 싶지 않으면 (End= ' ')을 사용하면 된다.
'''''''''''''''''''''''''''''''''''''''''''''

'''======================================================'''



'''--------------------- 6) 연산자 ---------------------'''

v1 = 1 # 치환
v1 = v2 = v3 = 2
print(v1, v2, v3)
print('hi', end= ' ') #이거 위에서 Tip으로 써둔거 활용해봄.
print('hello')
v1, v2 = 10, 20
v2, v1 = v1, v2
print(v1, ' ', v2)

'''======================================================'''



'''--------------------- 7) 치환  ---------------------'''

print('\n값 할당 packing ----------------')
v1, *v2 = [1,2,3,4,5] #v1이 배열 0번째거 가지고, 나머지는 v2가다 가져.
print(v1)
print(v2)

v1, *v2, v3 =[1,2,3,4,5]
print(v1)
print(v2)
print(v3)

print(5 + 4, 5 - 4, 5 * 3, 5 / 3, 5 // 3, 5 % 3, 5 ** 3)

print(divmod(5, 3))

print(3 +4 * 5, (3 + 4) * 5)

'''======================================================'''



'''-------------------- 8) 관계연산자  ---------------------'''

print(5 > 3, 5 ==3, 5!= 3, 5<=3 )

print(5 > 4 and 4 < 5, 5 > 4 or 4 < 5, not(5 >= 3))

'''======================================================'''



'''-------------------- 9) replace --------------------'''

print('한' + '국' + '만세')

print('한국' * 10) 

'''======================================================'''



'''-------------------- 10)불 자료형 --------------------'''
# 여기에서 None은 Keyword이다.
 
a = 10
a = a + 1
a += 1
#++a a++
print(a)
 
print(a * -1, -a, --a)
 
print(bool(0),bool(1),bool(-10),bool(10.5))

print(bool(False), bool(True), bool(None), bool(""), bool([]), bool({}))


'''======================================================'''



print("---\n---------")
print('c:\aa\bb\nbc.txt')
print(r'c:\aa\bb\nbc.txt')


